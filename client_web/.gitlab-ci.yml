stages:
  - âœ… install
  - ðŸ–Œ format
  - ðŸ›  build
  - ðŸ“¦ update

variables:
  NODE_IMAGE: node:18.12.0-alpine
  DOCKER_IMAGE: docker:20.10.19
  ALPINE_IMAGE: alpine:3.14.2
  NPM_GLOBAL_CACHE: /cache/.npm_global_cache
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"
  GIT_DEPTH: 1

.node_modules_cache_var:
  - &node_modules_cache
    key:
      files:
        - package-lock.json
    paths:
      - node_modules
    policy: pull

install:
  image: $NODE_IMAGE
  stage: âœ… install
  cache:
    - <<: *node_modules_cache
      policy: push
  script:
    - npm ci --cache $NPM_GLOBAL_CACHE
  except:
    - tags

lint:
  image: $NODE_IMAGE
  stage: ðŸ–Œ format
  cache:
    - *node_modules_cache
  script:
    - npm run prettier:check
  except:
    - tags

build:
  image: $NODE_IMAGE
  stage: ðŸ›  build
  cache:
    - *node_modules_cache
  script:
    - npm run build
  except:
    - tags

update:
  image: $ALPINE_IMAGE
  stage: ðŸ“¦ update
  script:
    - apk add --no-cache git
    - git clone https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/EpitechPromo2025/$GITHUB_REPO_NAME.git /tmp/
    - mkdir -p /tmp/client_web
    - rm -rf /tmp/client_web/*
    - cp -af . /tmp/client_web
    - cd /tmp/
    - git config user.name "$GITLAB_USERNAME"
    - git config user.email "gitlab@ci.com"
    - git add -A
    - git commit -m "Update client_web"
    - git push https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/EpitechPromo2025/$GITHUB_REPO_NAME.git
  only:
    - main
